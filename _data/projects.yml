- name: AnimalCare
  link: /projects/animalcare
  image: /assets/images/animalcare.jpeg
  subtitle: "Zero-shot detection for animals"
  tags: ["Python", "Flask", "AI", "Computer Vision", "Docker"]

- name: HealthTech
  link: /projects/healthtech
  image: /assets/images/healthtech.jpeg
  subtitle: "Platform leveraging LLM for personalized healthcare"
  tags: ["Python", "React", "Docker", "LLM", "Healthcare"]

- name: HouseFinder AI
  link: /projects/housefinder-ai
  image: /assets/images/housefinderai.jpeg
  subtitle: "Intelligent real estate aggregator"
  tags: ["Node.js", "React", "GPT", "API Integration", "AWS"]

- name: HousePrice AI
  link: /projects/houseprice-ai
  image: /assets/images/housepriceai.jpeg
  subtitle: "Real-time housing price predictions"
  tags: ["Python", "Machine Learning", "Regression", "Data Science"]

- name: Medical Scribe
  link: /projects/medicalscribe
  image: /assets/images/medicalscribe.jpeg
  subtitle: "Automated ICD-10 extraction from real-time transcription"
  tags: ["Python", "AWS", "NLP", "Healthcare", "Automation"]

- name: Detect Seam
  link: /projects/detect-seam
  image: /assets/images/detectseam.jpeg
  subtitle: "Java-based image processing application"
  tags: ["Java", "Image Processing", "FIGMA", "Data Structures"]

- name: Smart Flashcards
  link: /projects/smart-flashcards
  image: /assets/images/smartflashcards.jpeg
  subtitle: "Adaptive flashcards with ML-based difficulty adjustment"
  tags: ["Java", "Machine Learning", "CLI", "Automation"]

- name: Phishkill
  link: /projects/phishkill
  image: /assets/images/phishkill.jpeg
  subtitle: "Flask-based phishing risk analyzer"
  tags: ["Python", "Flask", "Cybersecurity", "API Integration"]

  
# - name: AnimalCare
#   link: https://github.com/sandeepsalwan1/animalcare
#   image: /assets/images/animalcare.jpeg
#   subtitle: "Zero-shot detection for animals"
#   tags: ["Python", "Flask", "AI", "Computer Vision", "Docker"]
#   features:
#     - Crafted zero-shot object detection pipeline with Meta's Sam2, utilizing Jupyter Notebook for segmentation to isolate animals in video frames.
#     - Designed an interface with React, Flask, HTML, and CSS for video uploads and processing.
#     - Optimized AI chat window with Python and REST API, analyzing animal videos only on frame changes for cost efficiency and accuracy.
#     - Containerized the application with Docker for easy deployment and consistent environment.
#     - Integrated AWS S3 for secure video storage and retrieval.

# - name: HealthTech
#   link: https://github.com/sandeepsalwan1/healthtech
#   image: /assets/images/HealthTech.jpeg
#   subtitle: "Platform leveraging LLM for personalized healthcare"
#   tags: ["Python", "React", "Docker", "LLM", "Healthcare"]
#   features:
#     - Engineered a HealthTech platform with a login page, featuring an Event Agent [ReAct Search] to find nearby events.
#     - Developed a Training Agent [CoT] using a multimodal LLM to provide personalized training plans from images and text.
#     - Designed a Nutrition Agent [RAG] that searches PDFs to recommend ready-made health plans.
#     - Containerized application services using Docker Compose for local testing.
#     - Explored HIPAA-compliant data handling for sensitive user information.

# - name: HouseFinder AI
#   link: https://github.com/sandeepsalwan1/housefinderai
#   image: /assets/images/housefinderai.jpeg
#   subtitle: "Intelligent real estate aggregator"
#   tags: ["Node.js", "React", "GPT", "API Integration", "AWS"]
#   features:
#     - Developed specialized real estate platform with a team of 4 to categorize properties with RentcastAPI based on personal preferences like safety and walkability.
#     - Deployed custom GPT bot to answer more questions the user has.
#     - Increased app accessibility by implementing WhatsApp API and having a website frontend so the client can send messages through two platforms.
#     - Leveraged AWS for serverless hosting and S3-based static content delivery.
#     - Incorporated a CI/CD pipeline with GitHub Actions for seamless deployments.

# - name: HousePrice AI
#   link: https://github.com/sandeepsalwan1/
#   image: /assets/images/housepriceai.jpeg
#   subtitle: "Real-time housing price predictions"
#   tags: ["Python", "Machine Learning", "Regression", "Data Science"]
#   features:
#     - Predicted real-time bay area house prices based on factors such as sq ft, # of rooms, and house age.
#     - Implemented multivariable polynomial regression.
#     - Utilized machine learning principles such as regression, normalization, and feature engineering for a more precise output.
#     - Deployed predictive model via Flask for quick API-based evaluations.
#     - Automated data ingestion pipeline for daily housing market updates.

# - name: Medical Scribe
#   link: https://github.com/sandeepsalwan1/medicalscribe
#   image: /assets/images/medicalscribe.jpeg
#   subtitle: "Automated ICD-10 extraction from real-time transcription"
#   tags: ["Python", "AWS", "NLP", "Healthcare", "Automation"]
#   features:
#     - Implemented real-time transcription with Deepgram to capture patient interactions accurately.
#     - Employed AWS Medical NLP to extract ICD-10 codes from transcriptions, converting data into structured information.
#     - Utilized MultiOn to auto-fill medical forms with patient details and diagnostic codes, streamlining documentation.
#     - Added role-based access controls for secure access to sensitive health data.
#     - Integrated FHIR standards for data interoperability across EHR systems.

# - name: Detect Seam
#   link: https://github.com/sandeepsalwan1/CSFinalProjects/tree/main/CS2510/DetectSeam
#   image: /assets/images/detectseam.jpeg
#   subtitle: "Java-based image processing application"
#   tags: ["Java", "Image Processing", "FIGMA", "Data Structures"]
#   features:
#     - Architected Java image processing application with FIGMA.
#     - Achieved O(1) access time to enhance project speed.
#     - Utilized Java's AWT and I/O operations to improve user experience.
#     - Built a custom data structure for efficient pixel-level seam carving.
#     - Added concurrency features for faster large-image processing.

# - name: Smart Flashcards
#   link: https://github.com/sandeepsalwan1/CSFinalProjects/tree/main/CS2500/Smart%20Flashcards
#   image: /assets/images/smartflashcards.jpeg
#   subtitle: "Adaptive flashcards with ML-based difficulty adjustment"
#   tags: ["Java", "Machine Learning", "CLI", "Automation"]
#   features:
#     - Utilizes Machine Learning for sentiment analysis (e.g., Simple and ML classifiers).
#     - Dynamic state transitions based on user input with affirmation checking.
#     - Leverages features like interactive console and file reading for card decks.
#     - Adds spaced repetition logic for optimized knowledge retention.
#     - Provides built-in analytics on user performance to tailor next steps.

# - name: Phishkill
#   link: https://github.com/sandeepsalwan1/phishkill
#   image: /assets/images/phishkill.jpeg
#   subtitle: "Flask-based phishing risk analyzer"
#   tags: ["Python", "Flask", "Cybersecurity", "API Integration"]
#   features:
#     - Developed a comprehensive application using Flask, Heroku, and APIs to analyze emails and calculate phishing risk percentages.
#     - Launched a live, user-friendly application accessible online with a streamlined landing page for easy use.
#     - Incorporated effective techniques/algorithms to evaluate email content, providing a reliable phishing probability score.
#     - Integrated custom Bayesian filtering for spam detection and malicious link scanning.
#     - Implemented Twilio SMS alerts for high-risk email notifications.


# - name: AnimalCare
#   link: https://github.com/sandeepsalwan1/animalcare
#   features:
#     - Crafted zero-shot object detection pipeline with Meta's Sam2, utilizing Jupyter Notebook for segmentation to isolate animals in video frames.
#     - Designed an interface with React, Flask, HTML, and CSS for video uploads and processing.
#     - Optimized AI chat window with Python and REST API, analyzing animal videos only on frame changes for cost efficiency and accuracy.

# - name: HealthTech
#   link: https://github.com/sandeepsalwan1/healthtech
#   features:
#     - Engineered a HealthTech platform with a login page, featuring an Event Agent [ReAct Search] to find nearby events.
#     - Developed a Training Agent [CoT] using a multimodal LLM to provide personalized training plans from images and text.
#     - Designed a Nutrition Agent [RAG] that searches PDFs to recommend ready-made health plans.

# - name: HouseFinder AI
#   link: https://github.com/sandeepsalwan1/housefinderai
#   features:
#     - Developed specialized real estate platform with a team of 4 to categorize properties with RentcastAPI based on personal preferences like safety and walkability.
#     - Deployed custom GPT bot to answer more questions the user has.
#     - Increased app accessibility by implementing WhatsApp API and having a website frontend so the client can send messages through two platforms.

# - name: HousePrice AI
#   link: https://github.com/sandeepsalwan1/
#   features:
#     - Predicted real-time bay area house prices based on factors such as sq ft, # of rooms, and house age.
#     - Implemented multivariable polynomial regression.
#     - Utilized machine learning principles such as regression, normalization, and feature engineering for a more precise output.

# - name: Medical Scribe
#   link: https://github.com/sandeepsalwan1/medicalscribe
#   features:
#     - Implemented real-time transcription with Deepgram to capture patient interactions accurately.
#     - Employed AWS Medical NLP to extract ICD-10 codes from transcriptions, converting data into structured information.
#     - Utilized MultiOn to auto-fill medical forms with patient details and diagnostic codes, streamlining documentation.

# - name: Detect Seam
#   link: https://github.com/sandeepsalwan1/CSFinalProjects/tree/main/CS2510/DetectSeam
#   features:
#     - Architected Java image processing application with FIGMA.
#     - Achieved O(1) access time to enhance project speed.
#     - Utilized Java's AWT and I/O operations to improve user experience.

# - name: Smart Flashcards
#   link: https://github.com/sandeepsalwan1/CSFinalProjects/tree/main/CS2500/Smart%20Flashcards
#   features:
#     - Utilizes Machine Learning for sentiment analysis (e.g., Simple and ML classifiers).
#     - Dynamic state transitions based on user input with affirmation checking.
#     - Leverages features like interactive console and file reading for card decks.

# - name: Phishkill
#   link: https://github.com/sandeepsalwan1/phishkill
#   features:
#     - Developed a comprehensive application using Flask, Heroku, and APIs to analyze emails and calculate phishing risk percentages.
#     - Launched a live, user-friendly application accessible online with a streamlined landing page for easy use.
#     - Incorporated effective techniques/algorithms to evaluate email content, providing a reliable phishing probability score.